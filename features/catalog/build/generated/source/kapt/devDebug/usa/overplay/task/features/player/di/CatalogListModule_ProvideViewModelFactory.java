// Generated by Dagger (https://dagger.dev).
package usa.overplay.task.features.catalog.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import usa.overplay.task.core.remote.repo.catalog.CatalogRepo;
import usa.overplay.task.features.catalog.CatalogListViewModel;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CatalogListModule_ProvideViewModelFactory implements Factory<CatalogListViewModel> {
  private final CatalogListModule module;

  private final Provider<CatalogRepo> catalogRepoProvider;

  public CatalogListModule_ProvideViewModelFactory(CatalogListModule module,
      Provider<CatalogRepo> catalogRepoProvider) {
    this.module = module;
    this.catalogRepoProvider = catalogRepoProvider;
  }

  @Override
  public CatalogListViewModel get() {
    return provideViewModel(module, catalogRepoProvider.get());
  }

  public static CatalogListModule_ProvideViewModelFactory create(CatalogListModule module,
      Provider<CatalogRepo> catalogRepoProvider) {
    return new CatalogListModule_ProvideViewModelFactory(module, catalogRepoProvider);
  }

  public static CatalogListViewModel provideViewModel(CatalogListModule instance,
      CatalogRepo catalogRepo) {
    return Preconditions.checkNotNullFromProvides(instance.provideViewModel(catalogRepo));
  }
}
